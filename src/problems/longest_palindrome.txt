use std::collections::HashMap;

impl Solution {
    pub fn longest_palindrome(s: String) -> i32 {
        let mut freqs: HashMap<char, i32> = HashMap::new();
        let mut len = 0;
        let mut odd_found = false;

        for c in s.chars() {
            freqs.entry(c).and_modify(|x| *x += 1).or_insert(1);
        }

        for &v in freqs.values()  {
            if v == 1_i32 && !odd_found {
                len += v;
                odd_found = true;
            }

            if v % 2 == 0 {
                len += v;
            } else {
                if odd_found {
                    len += v - 1;
                } else {
                    len += v;
                    odd_found = true;
                }
            }
        }
        
        len
    }
}