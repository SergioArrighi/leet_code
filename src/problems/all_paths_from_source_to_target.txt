impl Solution {
    pub fn all_paths_source_target(graph: Vec<Vec<i32>>) -> Vec<Vec<i32>> {
        let mut res: Vec<Vec<i32>> = Vec::new();

        fn rec(graph: &Vec<Vec<i32>>, res: &mut Vec<Vec<i32>>, mut path: Vec<i32>, curr: i32) {
            // Last node already added to path
            path.push(curr);

            // Termination when curr == graph.len() - 1
            if curr == graph.len() as i32 - 1 {
                res.push(path);
                return;
            }

            // Recursive call for each connected node
            // Path is cloned to be independent
            for &n in graph[curr as usize].iter() {
                rec(graph, res, path.clone(), n);
            }
        }

        rec(&graph, &mut res, Vec::new(), 0);

        res
    }
}